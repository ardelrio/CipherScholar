<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".AffineCipherLearn">

    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@drawable/background">

        <Button
            android:id="@+id/homeButton"
            android:layout_width="78dp"
            android:layout_height="40dp"
            android:onClick="clickFunction"
            android:text="Home"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.018"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.007" />

        <TextView
            android:id="@+id/textView2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Affine Cipher"
            android:textSize="32dp"
            android:textStyle ="bold"
            android:textColor="#000000"
            android:layout_below="@+id/homeButton"
            android:layout_centerHorizontal="true"
            />

        <TextView
            android:id="@+id/textView1"
            android:layout_width="287dp"
            android:layout_height="90dp"
            android:layout_below="@+id/textView2"
            android:layout_centerHorizontal="true"
            android:text="     The Affine cipher is similar to that of the shift cipher, however instead of simply adding the numerical equivalent of the letter to a shift, we first multiply it by some factor a first."
            android:textColor="#000000"
            android:textStyle="bold" />

        <TextView
            android:id="@+id/textView3"

            android:layout_width="290dp"
            android:layout_height="197dp"
            android:text="     In order to decrypt a given cipher text, a must be relatively prime with respect to N - the number of possible characters in a given alphabet. Meaning that N and a must not share any factors other than 1. If this condition is meant, this means that a has an inverse in mod N, and the ciphertext can be decrypted by first subtracting b from the numerical equivalent, and then multiplying by the inverse of a in mod N.     "
            android:textColor="#000000"
            android:textStyle="bold"
            android:layout_below="@+id/textView1"
            android:layout_centerHorizontal="true"
            />

        <TextView
            android:id="@+id/textView4"
            android:layout_width="289dp"
            android:layout_height="77dp"
            android:layout_below="@+id/textView3"
            android:layout_centerHorizontal="true"
            android:text="     For example, using the a=5 and b=3, the word CRYPTOGRAPHY can be encrypted as:"
            android:textColor="#000000"
            android:textStyle="bold" />

        <ImageView
            android:id="@+id/imageView1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView4"
            android:layout_marginTop="-52dp"

            app:srcCompat="@drawable/affine_example_encrypt" />

        <TextView
            android:id="@+id/textView5"
            android:layout_centerHorizontal="true"
            android:layout_width="287dp"
            android:layout_height="wrap_content"
            android:layout_below="@+id/imageView1"
            android:layout_marginTop="-16dp"
            android:text="     Similarly, after finding the modular multiplicative inverse of a to be 21 using the Euclidean Algorithm, the above cipher text can be decrypted back to the plaintext as such:"
            android:textColor="#000000"
            android:textStyle="bold" />

        <ImageView
            android:id="@+id/imageView2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/textView5"
            android:layout_centerHorizontal="true"
            app:srcCompat="@drawable/affine_example_decrypt"
        />
    </RelativeLayout>
</ScrollView>


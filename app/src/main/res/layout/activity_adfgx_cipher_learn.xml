<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".AffineCipherLearn">

    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@drawable/background">

        <Button
            android:id="@+id/homeButton"
            android:layout_width="78dp"
            android:layout_height="40dp"
            android:onClick="clickFunction"
            android:text="Home"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.018"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.007" />

        <TextView
            android:id="@+id/textView2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="ADFGX"
            android:textSize="32dp"
            android:textStyle ="bold"
            android:textColor="#000000"
            android:layout_below="@+id/homeButton"
            android:layout_centerHorizontal="true"
            />

        <TextView
            android:id="@+id/textView1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text=" The ADFGX cipher was a field cipher used by the German Army during World War I. ADFGX is a fractionating transposition cipher which combined a modified Polybius square with a single columnar transposition. The cipher is named after the five possible letters used in the ciphertext: A, D, F, G and X. These letters were chosen deliberately because they sound very different from each other when transmitted via morse code. The intention was to reduce the possibility of operator error. In order to encrypt an ADFGX cipher, you are given a plaintext with length of 26 or less and a key word, which you need to permute into a key square."
            android:textStyle ="bold"
            android:textColor="#000000"
            android:layout_below="@+id/textView2"
            android:layout_centerHorizontal="true"
            />

        <TextView
            android:id="@+id/textView3"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text ="    For example, the word keyword CIPHER becomes key square:"
            android:textColor="#000000"
            android:textStyle="bold"
            android:layout_below="@+id/textView1"
            android:layout_centerHorizontal="true"
            />

        <TextView
            android:id="@+id/textView4"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/imageView1"
            android:layout_marginTop="11dp"
            android:text="     Then, you assign values to your plaintext: ENCRYPT, based off of the key square generated by your keyword."
            android:textColor="#000000"
            android:textStyle="bold" />

        <ImageView
            android:id="@+id/imageView1"
            android:layout_width="match_parent"
            android:layout_height="81dp"
            android:layout_below="@+id/textView3"
            android:layout_marginTop="3dp"
            app:srcCompat="@drawable/keysquare" />

        <ImageView
            android:id="@+id/imageView2"
            android:layout_width="match_parent"
            android:layout_height="80dp"
            android:layout_below="@+id/textView4"
            android:layout_marginTop="15dp"
            app:srcCompat="@drawable/encrypt1_adfgx" />

        <TextView
            android:id="@+id/textView5"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/imageView2"
            android:layout_marginTop="4dp"
            android:text="     After, you encrypt your code word, WEAPONS, by putting the plaintext representation below your code word and then you sort the code word alphabetically, which leaves you the ciphertext."
            android:textColor="#000000"
            android:textStyle="bold" />

        <ImageView
            android:id="@+id/imageView3"
            android:layout_width="match_parent"
            android:layout_height="47dp"
            android:layout_below="@+id/textView5"
            android:layout_marginTop="0dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:srcCompat="@drawable/encrypt2_adfgx" />

        <ImageView
            android:id="@+id/imageView4"
            android:layout_width="match_parent"
            android:layout_height="47dp"
            android:layout_below="@+id/imageView3"
            android:layout_marginTop="9dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:srcCompat="@drawable/encrypt3_adfgx" />


        <TextView
            android:id="@+id/textView6"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/imageView4"
            android:layout_marginTop="12dp"
            android:text="      This leaves us with cipher text: AAFXAFXGDAGGAX

Now we will have to decrypt the above ciphertext, which was encrypted using code word WEAPONS and keyword CIPHER.

You have to construct a new chart to show how everything was displaced by the alphabetic sorting.
"
            android:textColor="#000000"
            android:textStyle="bold" />

        <ImageView
            android:id="@+id/imageView5"
            android:layout_width="match_parent"
            android:layout_height="47dp"
            android:layout_below="@+id/textView6"
            android:layout_marginTop="7dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:srcCompat="@drawable/decrypt1_adfgx" />

        <TextView
            android:id="@+id/textView7"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_below="@+id/imageView5"
            android:layout_marginTop="4dp"
            android:text="     Rearranging to the correct order we have."
            android:textColor="#000000"
            android:textStyle="bold" />

        <ImageView
            android:id="@+id/imageView6"
            android:layout_width="match_parent"
            android:layout_height="77dp"
            android:layout_below="@+id/textView7"
            android:layout_marginTop="11dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:srcCompat="@drawable/decrypt2_adfgx" />

        <TextView
            android:id="@+id/textView8"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/imageView6"
            android:layout_marginTop="4dp"
            android:text="     Then we use the corresponding Key Square, same as the key square above to our keyword and match our row and column information to find the encrypted text."
            android:textColor="#000000"
            android:textStyle="bold" />

        <ImageView
            android:id="@+id/imageView7"
            android:layout_width="397dp"
            android:layout_height="69dp"
            android:layout_below="@+id/textView8"
            android:layout_marginTop="11dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:srcCompat="@drawable/decrypt3_adfgx" />

    </RelativeLayout>
</ScrollView>

